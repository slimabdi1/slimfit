export declare const ROLLUP_GLOBALS: {
    '@angular/animations': string;
    '@angular/core': string;
    '@angular/common': string;
    '@angular/common/http': string;
    '@angular/cdk': string;
    '@angular/cdk/a11y': string;
    '@angular/cdk/bidi': string;
    '@angular/cdk/coercion': string;
    '@angular/cdk/collections': string;
    '@angular/cdk/keycodes': string;
    '@angular/cdk/observers': string;
    '@angular/cdk/overlay': string;
    '@angular/cdk/platform': string;
    '@angular/cdk/portal': string;
    '@angular/cdk/rxjs': string;
    '@angular/cdk/scrolling': string;
    '@angular/cdk/stepper': string;
    '@angular/cdk/table': string;
    '@angular/forms': string;
    '@angular/http': string;
    '@angular/router': string;
    '@angular/platform-browser': string;
    '@angular/platform-browser-dynamic': string;
    '@angular/platform-browser/animations': string;
    'rxjs/AnonymousSubject': string;
    'rxjs/AsyncSubject': string;
    'rxjs/BehaviorSubject': string;
    'rxjs/Notifiction': string;
    'rxjs/ObservableInput': string;
    'rxjs/Observable': string;
    'rxjs/Observer': string;
    'rxjs/ReplaySubject': string;
    'rxjs/Scheduler': string;
    'rxjs/Subject': string;
    'rxjs/SubjectSubscriber': string;
    'rxjs/SubscribableOrPromise': string;
    'rxjs/Subscriber': string;
    'rxjs/Subscription': string;
    'rxjs/TeardownLogic': string;
    'rxjs/add/observable/bindCallback': string;
    'rxjs/add/observable/bindNodeCallback': string;
    'rxjs/add/observable/combineLatest': string;
    'rxjs/add/observable/concat': string;
    'rxjs/add/observable/create': string;
    'rxjs/add/observable/defer': string;
    'rxjs/add/observable/empty': string;
    'rxjs/add/observable/forkJoin': string;
    'rxjs/add/observable/from': string;
    'rxjs/add/observable/fromEvent': string;
    'rxjs/add/observable/fromEventPattern': string;
    'rxjs/add/observable/fromPromise': string;
    'rxjs/add/observable/interval': string;
    'rxjs/add/observable/merge': string;
    'rxjs/add/observable/never': string;
    'rxjs/add/observable/of': string;
    'rxjs/add/observable/range': string;
    'rxjs/add/observable/throw': string;
    'rxjs/add/observable/timer': string;
    'rxjs/add/observable/webSocket': string;
    'rxjs/add/observable/zip': string;
    'rxjs/add/operator/audit': string;
    'rxjs/add/operator/auditTime': string;
    'rxjs/add/operator/buffer': string;
    'rxjs/add/operator/bufferCount': string;
    'rxjs/add/operator/bufferTime': string;
    'rxjs/add/operator/bufferToggle': string;
    'rxjs/add/operator/bufferWhen': string;
    'rxjs/add/operator/catch': string;
    'rxjs/add/operator/combineAll': string;
    'rxjs/add/operator/combineLatest': string;
    'rxjs/add/operator/concat': string;
    'rxjs/add/operator/concatAll': string;
    'rxjs/add/operator/concatMap': string;
    'rxjs/add/operator/concatMapTo': string;
    'rxjs/add/operator/count': string;
    'rxjs/add/operator/debounce': string;
    'rxjs/add/operator/debounceTime': string;
    'rxjs/add/operator/defaultIfEmpty': string;
    'rxjs/add/operator/delay': string;
    'rxjs/add/operator/delayWhen': string;
    'rxjs/add/operator/dematerialize': string;
    'rxjs/add/operator/distinct': string;
    'rxjs/add/operator/distinctUntilChanged': string;
    'rxjs/add/operator/distinctUntilKeyChanged': string;
    'rxjs/add/operator/do': string;
    'rxjs/add/operator/elementAt': string;
    'rxjs/add/operator/every': string;
    'rxjs/add/operator/exhaust': string;
    'rxjs/add/operator/exhaustMap': string;
    'rxjs/add/operator/expand': string;
    'rxjs/add/operator/filter': string;
    'rxjs/add/operator/finally': string;
    'rxjs/add/operator/find': string;
    'rxjs/add/operator/findIndex': string;
    'rxjs/add/operator/first': string;
    'rxjs/add/operator/forEach': string;
    'rxjs/add/operator/groupBy': string;
    'rxjs/add/operator/ignoreElements': string;
    'rxjs/add/operator/isEmpty': string;
    'rxjs/add/operator/last': string;
    'rxjs/add/operator/let': string;
    'rxjs/add/operator/letProto': string;
    'rxjs/add/operator/lift': string;
    'rxjs/add/operator/map': string;
    'rxjs/add/operator/materialize': string;
    'rxjs/add/operator/max': string;
    'rxjs/add/operator/merge': string;
    'rxjs/add/operator/mergeAll': string;
    'rxjs/add/operator/mergeMap': string;
    'rxjs/add/operator/mergeMapTo': string;
    'rxjs/add/operator/mergeScan': string;
    'rxjs/add/operator/min': string;
    'rxjs/add/operator/multicast': string;
    'rxjs/add/operator/observeOn': string;
    'rxjs/add/operator/pairwise': string;
    'rxjs/add/operator/partition': string;
    'rxjs/add/operator/pluck': string;
    'rxjs/add/operator/publish': string;
    'rxjs/add/operator/publishBehavior': string;
    'rxjs/add/operator/publishLast': string;
    'rxjs/add/operator/publishReplay': string;
    'rxjs/add/operator/race': string;
    'rxjs/add/operator/reduce': string;
    'rxjs/add/operator/repeat': string;
    'rxjs/add/operator/repeatWhen': string;
    'rxjs/add/operator/retry': string;
    'rxjs/add/operator/retryWhen': string;
    'rxjs/add/operator/sample': string;
    'rxjs/add/operator/sampleTime': string;
    'rxjs/add/operator/scan': string;
    'rxjs/add/operator/sequenceEqual': string;
    'rxjs/add/operator/share': string;
    'rxjs/add/operator/single': string;
    'rxjs/add/operator/skip': string;
    'rxjs/add/operator/skipUntil': string;
    'rxjs/add/operator/skipWhile': string;
    'rxjs/add/operator/startWith': string;
    'rxjs/add/operator/subscribeOn': string;
    'rxjs/add/operator/switch': string;
    'rxjs/add/operator/switchMap': string;
    'rxjs/add/operator/switchMapTo': string;
    'rxjs/add/operator/take': string;
    'rxjs/add/operator/takeLast': string;
    'rxjs/add/operator/takeUntil': string;
    'rxjs/add/operator/takeWhile': string;
    'rxjs/add/operator/throttle': string;
    'rxjs/add/operator/throttleTime': string;
    'rxjs/add/operator/timeInterval': string;
    'rxjs/add/operator/timeout': string;
    'rxjs/add/operator/timeoutWith': string;
    'rxjs/add/operator/timestamp': string;
    'rxjs/add/operator/toArray': string;
    'rxjs/add/operator/toPromise': string;
    'rxjs/add/operator/window': string;
    'rxjs/add/operator/windowCount': string;
    'rxjs/add/operator/windowToggle': string;
    'rxjs/add/operator/windowWhen': string;
    'rxjs/add/operator/withLatestFrom': string;
    'rxjs/add/operator/zipAll': string;
    'rxjs/add/operator/zipProto': string;
    'rxjs/observable/bindCallback': string;
    'rxjs/observable/bindNodeCallback': string;
    'rxjs/observable/combineLatest': string;
    'rxjs/observable/concat': string;
    'rxjs/observable/defer': string;
    'rxjs/observable/empty': string;
    'rxjs/observable/forkJoin': string;
    'rxjs/observable/from': string;
    'rxjs/observable/fromEvent': string;
    'rxjs/observable/fromEventPattern': string;
    'rxjs/observable/fromPromise': string;
    'rxjs/observable/if': string;
    'rxjs/observable/interval': string;
    'rxjs/observable/merge': string;
    'rxjs/observable/never': string;
    'rxjs/observable/of': string;
    'rxjs/observable/pairs': string;
    'rxjs/observable/range': string;
    'rxjs/observable/throw': string;
    'rxjs/observable/timer': string;
    'rxjs/observable/using': string;
    'rxjs/observable/zip': string;
    'rxjs/operator/audit': string;
    'rxjs/operator/auditTime': string;
    'rxjs/operator/buffer': string;
    'rxjs/operator/bufferCount': string;
    'rxjs/operator/bufferTime': string;
    'rxjs/operator/bufferToggle': string;
    'rxjs/operator/bufferWhen': string;
    'rxjs/operator/catch': string;
    'rxjs/operator/combineAll': string;
    'rxjs/operator/combineLatest': string;
    'rxjs/operator/concat': string;
    'rxjs/operator/concatAll': string;
    'rxjs/operator/concatMap': string;
    'rxjs/operator/concatMapTo': string;
    'rxjs/operator/count': string;
    'rxjs/operator/debounce': string;
    'rxjs/operator/debounceTime': string;
    'rxjs/operator/defaultIfEmpty': string;
    'rxjs/operator/delay': string;
    'rxjs/operator/delayWhen': string;
    'rxjs/operator/dematerialize': string;
    'rxjs/operator/distinct': string;
    'rxjs/operator/distinctUntilChanged': string;
    'rxjs/operator/distinctUntilKeyChanged': string;
    'rxjs/operator/do': string;
    'rxjs/operator/elementAt': string;
    'rxjs/operator/every': string;
    'rxjs/operator/exhaust': string;
    'rxjs/operator/exhaustMap': string;
    'rxjs/operator/expand': string;
    'rxjs/operator/filter': string;
    'rxjs/operator/finally': string;
    'rxjs/operator/find': string;
    'rxjs/operator/findIndex': string;
    'rxjs/operator/first': string;
    'rxjs/operator/forEach': string;
    'rxjs/operator/groupBy': string;
    'rxjs/operator/ignoreElements': string;
    'rxjs/operator/isEmpty': string;
    'rxjs/operator/last': string;
    'rxjs/operator/let': string;
    'rxjs/operator/letProto': string;
    'rxjs/operator/lift': string;
    'rxjs/operator/map': string;
    'rxjs/operator/materialize': string;
    'rxjs/operator/max': string;
    'rxjs/operator/merge': string;
    'rxjs/operator/mergeAll': string;
    'rxjs/operator/mergeMap': string;
    'rxjs/operator/mergeMapTo': string;
    'rxjs/operator/mergeScan': string;
    'rxjs/operator/min': string;
    'rxjs/operator/multicast': string;
    'rxjs/operator/observeOn': string;
    'rxjs/operator/pairwise': string;
    'rxjs/operator/partition': string;
    'rxjs/operator/pluck': string;
    'rxjs/operator/publish': string;
    'rxjs/operator/publishBehavior': string;
    'rxjs/operator/publishLast': string;
    'rxjs/operator/publishReplay': string;
    'rxjs/operator/race': string;
    'rxjs/operator/reduce': string;
    'rxjs/operator/repeat': string;
    'rxjs/operator/repeatWhen': string;
    'rxjs/operator/retry': string;
    'rxjs/operator/retryWhen': string;
    'rxjs/operator/sample': string;
    'rxjs/operator/sampleTime': string;
    'rxjs/operator/scan': string;
    'rxjs/operator/sequenceEqual': string;
    'rxjs/operator/share': string;
    'rxjs/operator/single': string;
    'rxjs/operator/skip': string;
    'rxjs/operator/skipUntil': string;
    'rxjs/operator/skipWhile': string;
    'rxjs/operator/startWith': string;
    'rxjs/operator/subscribeOn': string;
    'rxjs/operator/switch': string;
    'rxjs/operator/switchMap': string;
    'rxjs/operator/switchMapTo': string;
    'rxjs/operator/take': string;
    'rxjs/operator/takeLast': string;
    'rxjs/operator/takeUntil': string;
    'rxjs/operator/takeWhile': string;
    'rxjs/operator/throttle': string;
    'rxjs/operator/throttleTime': string;
    'rxjs/operator/timeInterval': string;
    'rxjs/operator/timeout': string;
    'rxjs/operator/timeoutWith': string;
    'rxjs/operator/timestamp': string;
    'rxjs/operator/toArray': string;
    'rxjs/operator/toPromise': string;
    'rxjs/operator/window': string;
    'rxjs/operator/windowCount': string;
    'rxjs/operator/windowToggle': string;
    'rxjs/operator/windowWhen': string;
    'rxjs/operator/withLatestFrom': string;
    'rxjs/operator/zipAll': string;
    'rxjs/operator/zipProto': string;
    'rxjs/symbol/iterator': string;
    'rxjs/symbol/observable': string;
    'rxjs/symbol/rxSubscriber': string;
};
