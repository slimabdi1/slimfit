{"version":3,"file":"copy.js","sourceRoot":"","sources":["../../../src/lib/util/copy.ts"],"names":[],"mappings":";;AAAA,2CAAwC;AACxC,+BAA8B;AAC9B,MAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAEd,QAAA,SAAS,GAAG,CAAC,GAAW,EAAE,IAAY,EAAE,OAAa,EAAiB,EAAE;IACnF,WAAK,CAAC,iBAAiB,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC;IAC/C,MAAM,CAAC,qBAAS,CAAO,CAAC,eAAe,EAAE,EAAE;QACzC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;QAChD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;QACvC,CAAC;IACH,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC","sourcesContent":["import { promisify } from './promisify';\nimport { debug } from './log';\nconst cpx = require('cpx');\n\nexport const copyFiles = (src: string, dest: string, options?: any): Promise<void> => {\n  debug('copyFiles from ' + src + ' to ' + dest);\n  return promisify<void>((resolveOrReject) => {\n    if (options) {\n      cpx.copy(src, dest, options, resolveOrReject);\n    } else {\n      cpx.copy(src, dest, resolveOrReject);\n    }\n  });\n\n};\n"]}