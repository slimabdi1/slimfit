"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const ng_package_data_1 = require("./../model/ng-package-data");
const copy_1 = require("./../util/copy");
const path = require("path");
/**
 * Copies compiled source files from the build directory to the correct locations in the destination directory.
 *
 * @param ngPkg Angular package data.
 * @param baseBuildPath Path to where the source files are staged.
 */
function copySourceFilesToDestination(ngPkg, baseBuildPath) {
    return __awaiter(this, void 0, void 0, function* () {
        const separatorIndex = ngPkg.fullPackageName.lastIndexOf(ng_package_data_1.SCOPE_NAME_SEPARATOR);
        if (separatorIndex > -1) {
            const packageNameWithoutEndPart = ngPkg.fullPackageName.substring(0, separatorIndex);
            const destinationPath = path.resolve(ngPkg.rootDestinationPath, packageNameWithoutEndPart);
            yield copy_1.copyFiles(`${ngPkg.buildDirectory}/${packageNameWithoutEndPart}/**/*.{js,js.map}`, destinationPath);
        }
        else {
            yield copy_1.copyFiles(`${ngPkg.buildDirectory}/${ngPkg.fullPackageName}*.{js,js.map}`, ngPkg.rootDestinationPath);
        }
        yield copy_1.copyFiles(`${ngPkg.buildDirectory}/bundles/**/*.{js,js.map}`, `${ngPkg.rootDestinationPath}/bundles`);
        yield copy_1.copyFiles(`${baseBuildPath}/**/*.{d.ts,metadata.json}`, ngPkg.destinationPath);
    });
}
exports.copySourceFilesToDestination = copySourceFilesToDestination;
//# sourceMappingURL=transfer.js.map