"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("../util/path");
exports.SCOPE_PREFIX = '@';
exports.SCOPE_NAME_SEPARATOR = '/';
exports.DEFAULT_BUILD_FOLDER = '.ng_pkg_build';
class NgPackageData {
    constructor(
        /**
         * Source path of the root package (equivalent to the `src` field configured in the root ng-package.json).
         */
        rootSourcePath, rootPackageName, 
        /**
         * Destination path of the root package (equivalent to the `dest` field configured in the root ng-package.json).
         */
        rootDestinationPath, 
        /**
         * Source path of the current package (equivalent to a sub folder of the `src` field configured in the root ng-package.json).
         */
        sourcePath, ngPackageConfig) {
        this.rootSourcePath = rootSourcePath;
        this.rootDestinationPath = rootDestinationPath;
        this.sourcePath = sourcePath;
        this.pathOffsetFromSourceRoot = this.sourcePath.substring(rootSourcePath.length);
        // destination path of secondary modules is not configurable - this is to meet the Angular package format.
        this.destinationPath = rootDestinationPath + this.pathOffsetFromSourceRoot;
        this.fullPackageName = path_1.path.ensureUnixPath(rootPackageName + this.pathOffsetFromSourceRoot);
        if (this.fullPackageName.startsWith(exports.SCOPE_PREFIX)) {
            const firstSeparatorIndex = this.fullPackageName.indexOf(exports.SCOPE_NAME_SEPARATOR);
            if (firstSeparatorIndex > -1) {
                this.scope = this.fullPackageName.substring(0, firstSeparatorIndex);
                this.packageNameWithoutScope = this.fullPackageName.substring(firstSeparatorIndex + 1);
            }
        }
        if (!this.packageNameWithoutScope) {
            this.packageNameWithoutScope = this.fullPackageName;
        }
        if (ngPackageConfig.lib) {
            this.libExternals = ngPackageConfig.lib.externals;
            this.flatModuleFileName = ngPackageConfig.lib.flatModuleFile;
            this.entryFile = ngPackageConfig.lib.entryFile;
            this.jsxConfig = ngPackageConfig.lib.jsx;
            this.languageLevel = ngPackageConfig.lib.languageLevel;
        }
        if (!this.libExternals) {
            this.libExternals = {};
        }
        if (!this.flatModuleFileName) {
            this.flatModuleFileName = path_1.path.basename(this.fullPackageName);
        }
        if (!this.entryFile) {
            this.entryFile = 'public_api.ts';
        }
        if (!this.languageLevel) {
            this.languageLevel = ['dom', 'es2015'];
        }
        // Each entry point gets it's own unique build directory based upon the package name.
        const packageBuildFolderName = this.fullPackageName.replace(exports.SCOPE_NAME_SEPARATOR, '-');
        this.buildDirectory = path_1.path.resolve(this.rootSourcePath, exports.DEFAULT_BUILD_FOLDER, packageBuildFolderName);
    }
}
exports.NgPackageData = NgPackageData;
//# sourceMappingURL=ng-package-data.js.map