"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("./../util/path");
const ng_package_data_1 = require("./ng-package-data");
class NgArtifactsFactory {
    _makeUmdPackageName(ngPkg) {
        return ngPkg.packageNameWithoutScope.replace(ng_package_data_1.SCOPE_NAME_SEPARATOR, '-') + '.umd.js';
    }
    _unixPathJoin(...paths) {
        const joined = path_1.path.join(...paths);
        return path_1.path.ensureUnixPath(joined);
    }
    calculateArtifactPathsForBuild(ngPkg) {
        const pathFromRoot = path_1.path.resolve(ngPkg.buildDirectory, ngPkg.pathOffsetFromSourceRoot);
        return {
            main: path_1.path.join(ngPkg.buildDirectory, 'bundles', this._makeUmdPackageName(ngPkg)),
            module: path_1.path.join(ngPkg.buildDirectory, ngPkg.fullPackageName + '.es5.js'),
            es2015: path_1.path.join(ngPkg.buildDirectory, ngPkg.fullPackageName + '.js'),
            typings: path_1.path.join(pathFromRoot, ngPkg.flatModuleFileName + '.d.ts'),
            metadata: path_1.path.join(pathFromRoot, ngPkg.flatModuleFileName + '.metadata.json')
        };
    }
    calculateArtifactPathsForPackageJson(ngPkg) {
        const rootPathFromSelf = path_1.path.relative(ngPkg.sourcePath, ngPkg.rootSourcePath);
        return {
            main: this._unixPathJoin(rootPathFromSelf, 'bundles', this._makeUmdPackageName(ngPkg)),
            module: this._unixPathJoin(rootPathFromSelf, `${ngPkg.fullPackageName}.es5.js`),
            es2015: this._unixPathJoin(rootPathFromSelf, `${ngPkg.fullPackageName}.js`),
            typings: path_1.path.ensureUnixPath(`${ngPkg.flatModuleFileName}.d.ts`),
            metadata: path_1.path.ensureUnixPath(`${ngPkg.flatModuleFileName}.metadata.json`)
        };
    }
}
exports.NgArtifactsFactory = NgArtifactsFactory;
//# sourceMappingURL=ng-artifacts-factory.js.map