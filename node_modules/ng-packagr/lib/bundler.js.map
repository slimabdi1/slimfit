{"version":3,"file":"bundler.js","sourceRoot":"","sources":["../../src/lib/bundler.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,uEAAkE;AAClE,6CAA+C;AAC/C,2CAA+C;AAC/C,qCAAkC;AAClC,2CAA8C;AAC9C,6CAAwE;AACxE,2CAAwC;AACxC,qCAA+C;AAC/C,+CAAgE;AAChE,0CAAuC;AACvC,kCAAkC;AAElC;;;;GAIG;AACH,0BAAuC,KAAoB;;QAEzD,GAAG,CAAC,IAAI,CAAC,yBAAyB,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC;QAC3D,MAAM,eAAe,GAAuB,IAAI,yCAAkB,EAAE,CAAC;QACrE,MAAM,aAAa,GAAW,GAAG,KAAK,CAAC,cAAc,MAAM,KAAK,CAAC,wBAAwB,EAAE,CAAC;QAC5F,MAAM,aAAa,GAAgB,eAAe,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;QAEzF,2BAA2B;QAC3B,GAAG,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;QAC5C,MAAM,eAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAEnC,YAAY;QACZ,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC9B,MAAM,sBAAa,CAAC,KAAK,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QAErD,SAAS;QACT,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACxB,MAAM,eAAe,GAAW,MAAM,SAAG,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAChE,qEAAqE;QACrE,MAAM,wBAAc,CAAC,GAAG,aAAa,IAAI,KAAK,CAAC,kBAAkB,KAAK,CAAC,CAAC;QAExE,oBAAoB;QACpB,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAChC,MAAM,eAAM,CAAC;YACX,UAAU,EAAE,KAAK,CAAC,uBAAuB;YACzC,KAAK,EAAE,eAAe;YACtB,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,aAAa,CAAC,MAAM;YAC1B,SAAS,EAAE,KAAK,CAAC,YAAY;SAC9B,CAAC,CAAC;QACH,MAAM,wBAAc,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAE3C,gBAAgB;QAChB,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC/B,MAAM,sBAAgB,CACpB,aAAa,CAAC,MAAM,EACpB,aAAa,CAAC,MAAM,CAAC,CAAC;QACxB,MAAM,wBAAc,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAE3C,iBAAiB;QACjB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC7B,MAAM,eAAM,CAAC;YACX,UAAU,EAAE,KAAK,CAAC,uBAAuB;YACzC,KAAK,EAAE,aAAa,CAAC,MAAM;YAC3B,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,aAAa,CAAC,IAAI;YACxB,SAAS,EAAE,KAAK,CAAC,YAAY;SAC9B,CAAC,CAAC;QACH,MAAM,wBAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEzC,iBAAiB;QACjB,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACjC,MAAM,gBAAgB,GAAW,MAAM,qBAAY,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxE,MAAM,wBAAc,CAAC,gBAAgB,CAAC,CAAC;QAEvC,qCAAqC;QACrC,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAClC,MAAM,+BAAqB,CAAC,KAAK,CAAC,CAAC;QAEnC,sCAAsC;QACtC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACjC,MAAM,uCAA4B,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAEzD,4CAA4C;QAC5C,GAAG,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;QACrC,MAAM,wBAAwB,GAAgB,eAAe,CAAC,oCAAoC,CAAC,KAAK,CAAC,CAAC;QAC1G,MAAM,sBAAY,CAAC,KAAK,EAAE,wBAAwB,CAAC,CAAC;QAEpD,GAAG,CAAC,OAAO,CAAC,4BAA4B,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC;IACnE,CAAC;CAAA;AArED,4CAqEC","sourcesContent":["import { NgPackageData } from './model/ng-package-data';\nimport { NgArtifacts } from './model/ng-artifacts';\nimport { NgArtifactsFactory } from './model/ng-artifacts-factory';\nimport { writePackage } from './steps/package';\nimport { processAssets } from './steps/assets';\nimport { ngc } from './steps/ngc';\nimport { minifyJsFile } from './steps/uglify';\nimport { remapSourceMap, relocateSourceMapRoot } from './steps/sorcery';\nimport { rollup } from './steps/rollup';\nimport { downlevelWithTsc } from './steps/tsc';\nimport { copySourceFilesToDestination } from './steps/transfer';\nimport { rimraf } from './util/rimraf';\nimport * as log from './util/log';\n\n/**\n * Main Angular bundling processing.\n *\n * @param ngPkg Parent Angular package.\n */\nexport async function generateNgBundle(ngPkg: NgPackageData): Promise<void> {\n\n  log.info(`Generating bundle for ${ngPkg.fullPackageName}`);\n  const artifactFactory: NgArtifactsFactory = new NgArtifactsFactory();\n  const baseBuildPath: string = `${ngPkg.buildDirectory}/ts${ngPkg.pathOffsetFromSourceRoot}`;\n  const artifactPaths: NgArtifacts = artifactFactory.calculateArtifactPathsForBuild(ngPkg);\n\n  // 0. CLEAN BUILD DIRECTORY\n  log.info('Cleaning bundle build directory');\n  await rimraf(ngPkg.buildDirectory);\n\n  // 1. ASSETS\n  log.info('Processing assets');\n  await processAssets(ngPkg.sourcePath, baseBuildPath);\n\n  // 2. NGC\n  log.info('Running ngc');\n  const es2015EntryFile: string = await ngc(ngPkg, baseBuildPath);\n  // XX: see #46 - ngc only references to closure-annotated ES6 sources\n  await remapSourceMap(`${baseBuildPath}/${ngPkg.flatModuleFileName}.js`);\n\n  // 3. FESM15: ROLLUP\n  log.info('Compiling to FESM15');\n  await rollup({\n    moduleName: ngPkg.packageNameWithoutScope,\n    entry: es2015EntryFile,\n    format: 'es',\n    dest: artifactPaths.es2015,\n    externals: ngPkg.libExternals\n  });\n  await remapSourceMap(artifactPaths.es2015);\n\n  // 4. FESM5: TSC\n  log.info('Compiling to FESM5');\n  await downlevelWithTsc(\n    artifactPaths.es2015,\n    artifactPaths.module);\n  await remapSourceMap(artifactPaths.module);\n\n  // 5. UMD: ROLLUP\n  log.info('Compiling to UMD');\n  await rollup({\n    moduleName: ngPkg.packageNameWithoutScope,\n    entry: artifactPaths.module,\n    format: 'umd',\n    dest: artifactPaths.main,\n    externals: ngPkg.libExternals\n  });\n  await remapSourceMap(artifactPaths.main);\n\n  // 6. UMD: Minify\n  log.info('Minifying UMD bundle');\n  const minifiedFilePath: string = await minifyJsFile(artifactPaths.main);\n  await remapSourceMap(minifiedFilePath);\n\n  // 7. SOURCEMAPS: RELOCATE ROOT PATHS\n  log.info('Remapping source maps');\n  await relocateSourceMapRoot(ngPkg);\n\n  // 8. COPY SOURCE FILES TO DESTINATION\n  log.info('Copying staged files');\n  await copySourceFilesToDestination(ngPkg, baseBuildPath);\n\n  // 9. WRITE PACKAGE.JSON and OTHER DOC FILES\n  log.info('Writing package metadata');\n  const packageJsonArtifactPaths: NgArtifacts = artifactFactory.calculateArtifactPathsForPackageJson(ngPkg);\n  await writePackage(ngPkg, packageJsonArtifactPaths);\n\n  log.success(`Built Angular bundle for ${ngPkg.fullPackageName}`);\n}\n"]}