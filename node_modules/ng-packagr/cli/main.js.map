{"version":3,"file":"main.js","sourceRoot":"","sources":["../../src/cli/main.ts"],"names":[],"mappings":";;;AAEA,qCAAqC;AACrC,6BAA6B;AAC7B,oDAA6E;AAE7E,MAAM,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,iBAAiB,CAAC,CAAC;AAE5E,0BAA0B,MAAc;IACtC,MAAM,CAAC,MAAM,IAAI,oBAAoB,CAAC;AACxC,CAAC;AAED,OAAO;KACJ,IAAI,CAAC,YAAY,CAAC;KAClB,MAAM,CACL,sBAAsB,EACtB,2DAA2D,EAC3D,gBAAgB,EAChB,oBAAoB,CAAC;KACtB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAEvB,MAAM,YAAY,GAAQ,OAAO,CAAC;AAElC,4BAAe,CAAC,YAAqC,CAAC;KACnD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC","sourcesContent":["#! /usr/bin/env node\n\nimport * as program from 'commander';\nimport * as path from 'path';\nimport { createNgPackage, NgPackagrCliArguments } from './../lib/ng-packagr';\n\nconst DEFAULT_PROJECT_PATH = path.resolve(process.cwd(), 'ng-package.json');\n\nfunction parseProjectPath(parsed: string): string {\n  return parsed || DEFAULT_PROJECT_PATH;\n}\n\nprogram\n  .name('ng-packagr')\n  .option(\n    '-p, --project <path>',\n    'Path to the \\'ng-package.json\\' or \\'package.json\\' file.',\n    parseProjectPath,\n    DEFAULT_PROJECT_PATH)\n  .parse(process.argv);\n\nconst cliArguments: any = program;\n\ncreateNgPackage(cliArguments as NgPackagrCliArguments)\n  .catch((err) => process.exit(111));\n"]}